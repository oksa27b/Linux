Урок 7. Запуск веб-приложения из контейнеров
Задание:
Установить в виртуальную машину или VDS Docker, настроить набор контейнеров через docker compose 
по инструкции по ссылке: https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose-ru. 
Часть с настройкой certbot и HTTPS опустить, если у вас нет настоящего домена и белого IP.
oksana@oksana-VirtualBox:~$ sudo apt update
oksana@oksana-VirtualBox:~$ apt list --upgradable
oksana@oksana-VirtualBox:~$ sudo apt install apt-transport-https ca-certificates curl software-properties-common
oksana@oksana-VirtualBox:~$ docker -v
oksana@oksana-VirtualBox:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
oksana@oksana-VirtualBox:~$ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
oksana@oksana-VirtualBox:~$ sudo apt update
oksana@oksana-VirtualBox:~$ apt-cache policy docker-ce
docker-ce:
  Установлен: (отсутствует)
  Кандидат:   5:23.0.1-1~ubuntu.20.04~focal
oksana@oksana-VirtualBox:~$ sudo apt install docker-ce
oksana@oksana-VirtualBox:~$ sudo systemctl status docker
oksana@oksana-VirtualBox:~$ docker run hello-world
oksana@oksana-VirtualBox:~$ sudo !!
Hello from Docker!
This message shows that your installation appears to be working correctly.
oksana@oksana-VirtualBox:~$ apt install docker-compose
oksana@oksana-VirtualBox:~$ sudo !!
oksana@oksana-VirtualBox:~$ apt install yamllint
oksana@oksana-VirtualBox:~$ sudo !!
oksana@oksana-VirtualBox:~$ sudo docker-compose -v
docker-compose version 1.29.2, build unknown
oksana@oksana-VirtualBox:~$ sudo mkdir wordpress && cd wordpress
oksana@oksana-VirtualBox:~/wordpress$ sudo mkdir nginx-conf
oksana@oksana-VirtualBox:~/wordpress$ sudo nano nginx-conf/nginx.conf
server {
        listen 80;
        listen [::]:80;

        server_name test.loc www.test.loc;

        index index.php index.html index.htm;

        root /var/www/html;

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }

        location / {
                try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass wordpress:9000;
                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        location ~ /\.ht {
                deny all;
        }

        location = /favicon.ico {
                log_not_found off; access_log off;
        }
        location = /robots.txt {
                log_not_found off; access_log off; allow all;
        }
        location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
                expires max;
                log_not_found off;
        }
}

oksana@oksana-VirtualBox:~/wordpress$ sudo nano .env
MYSQL_ROOT_PASSWORD=test
MYSQL_USER=admin
MYSQL_PASSWORD=test
oksana@oksana-VirtualBox:~/wordpress$ sudo nano .dockerignore
.env
.git
docker-compose.yml
.dockerignore
oksana@oksana-VirtualBox:~/wordpress$ sudo nano docker-compose.yml
version: '3'

services:
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=wordpress
    volumes:
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
     - app-network

  wordpress:
    depends_on:
      - db
    image: wordpress:5.1.1-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/html
    networks:
      - app-network

  webserver:
    depends_on:
      - wordpress
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
    networks:
      - app-network

volumes:
  wordpress:
  dbdata:

networks:
  app-network:
    driver: bridge

oksana@oksana-VirtualBox:~/wordpress$ sudo docker-compose up -d
oksana@oksana-VirtualBox:~/wordpress$ sudo docker ps
CONTAINER ID   IMAGE                        COMMAND                  CREATED         STATUS              PORTS                                   NAMES
947c46fcb01a   nginx:1.15.12-alpine         "nginx -g 'daemon of…"   2 minutes ago   Up About a minute   0.0.0.0:8000->80/tcp, :::8000->80/tcp   webserver
4c81aab2a465   wordpress:5.1.1-fpm-alpine   "docker-entrypoint.s…"   10 hours ago    Up 10 hours         9000/tcp                                wordpress
f0deedec52d9   mysql:8.0                    "docker-entrypoint.s…"   10 hours ago    Up 10 hours         3306/tcp, 33060/tcp                     db
88fd48265212   nginx                        "/docker-entrypoint.…"   2 days ago      Up 26 hours         0.0.0.0:80->80/tcp, :::80->80/tcp       nginx1
Далее, через браузер заходим по адресу 172.17.0.1:8000 – видим приглашение wordpress, заканчиваем настройку.



* Запустить два контейнера, связанные одной сетью (используя документацию). 
Первый контейнер БД (например, образ mariadb:10.8), второй контейнер — phpmyadmin. 
Получить доступ к БД в первом контейнере через второй контейнер (веб-интерфейс phpmyadmin).
oksana@oksana-VirtualBox:~$ sudo mkdir database && cd database
oksana@oksana-VirtualBox:~/database$ sudo nano docker-compose.yml
version: '3'

services:
  db:
    image: mariadb:10.8
    container_name: mariadb
    environment:
      MARIADB_ROOT_PASSWORD: my_secret_password
      MARIADB_DATABASE: app_db
      MARIADB_USER: db_user
      MARIADB_PASSWORD: db_user_pass
    ports:
      - "6033:3306"
    volumes:
      - dbdata:/var/lib/mariadb

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - db
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8081:80

volumes:
  dbdata:

oksana@oksana-VirtualBox:~/database$ sudo docker-compose up -d
oksana@oksana-VirtualBox:~/database$ sudo docker ps
CONTAINER ID   IMAGE                        COMMAND                  CREATED         STATUS              PORTS                                       NAMES
b5f4154d2f88   phpmyadmin/phpmyadmin        "/docker-entrypoint.…"   2 minutes ago   Up About a minute   0.0.0.0:8081->80/tcp, :::8081->80/tcp       pma
1bb061ad4010   mariadb:10.8                 "docker-entrypoint.s…"   2 minutes ago   Up 2 minutes        0.0.0.0:6033->3306/tcp, :::6033->3306/tcp   mariadb
947c46fcb01a   nginx:1.15.12-alpine         "nginx -g 'daemon of…"   24 hours ago    Up 24 hours         0.0.0.0:8000->80/tcp, :::8000->80/tcp       webserver
4c81aab2a465   wordpress:5.1.1-fpm-alpine   "docker-entrypoint.s…"   34 hours ago    Up 34 hours         9000/tcp                                    wordpress
f0deedec52d9   mysql:8.0                    "docker-entrypoint.s…"   34 hours ago    Up 34 hours         3306/tcp, 33060/tcp                         db
88fd48265212   nginx                        "/docker-entrypoint.…"   3 days ago      Up 2 days           0.0.0.0:80->80/tcp, :::80->80/tcp           nginx1

Далее, через браузер заходим по адресу 172.17.0.1:8081 – видим приглашение phpmuadmin, вводим сервер – db, user - db_user, PASSWORD: db_user_pass, заканчиваем настройку.





Результат:
Текст команд, которые применялись при выполнении задания. 
При наличии: часть конфигурационных файлов, которые решают задачу. 
Скриншоты результата запуска контейнеров (веб-интерфейс). 
Присылаем в формате текстового документа: задание и команды для решения (без вывода). 
Формат — PDF (один файл на все задания).